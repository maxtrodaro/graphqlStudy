let gql,createRepository;_e5d‍.x([["typeDefs",()=>typeDefs],["resolvers",()=>resolvers]]);_e5d‍.w("apollo-server-express",[["gql",["gql"],function(v){gql=v}]]);_e5d‍.w("../../io/database/createRepository",[["default",["createRepository"],function(v){createRepository=v}]]);


const clientRepository = createRepository("client");

       const typeDefs = gql`
  type Client {
    id: ID!
    name: String!
    email: String!
    disabled: Boolean!
  }

  extend type Query {
    client(id: ID!): Client
    # clients: [Client!]!
  }
`;

       const resolvers = {
  Query: {
    client: async (_, { id }) => {
      const clients = await clientRepository.read();
      return clients.find((client) => client.id === id);
    },
    clients: async () => {
      const clients = await clientRepository.read();
      return clients;
    },
  },
};
